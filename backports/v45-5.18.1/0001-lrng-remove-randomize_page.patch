From db57fb730fb70da790984b4604cce820dcb9e7c1 Mon Sep 17 00:00:00 2001
From: Stephan Mueller <smueller@chronox.de>
Date: Mon, 30 May 2022 21:54:10 +0200
Subject: [PATCH 1/2] lrng: remove randomize_page

Starting with 5.18.1 the function was moved into mm/util.c. Therefore it
can be removed for good from the LRNG code base.

Signed-off-by: Stephan Mueller <smueller@chronox.de>
---
 drivers/char/lrng/lrng_interface_aux.c | 32 --------------------------
 1 file changed, 32 deletions(-)

diff --git a/drivers/char/lrng/lrng_interface_aux.c b/drivers/char/lrng/lrng_interface_aux.c
index a2236ff3b..0eb49bd6b 100644
--- a/drivers/char/lrng/lrng_interface_aux.c
+++ b/drivers/char/lrng/lrng_interface_aux.c
@@ -124,35 +124,3 @@ void invalidate_batched_entropy(void)
 		spin_unlock_irqrestore(&batched_entropy->batch_lock, flags);
 	}
 }
-
-/*
- * randomize_page - Generate a random, page aligned address
- * @start:	The smallest acceptable address the caller will take.
- * @range:	The size of the area, starting at @start, within which the
- *		random address must fall.
- *
- * If @start + @range would overflow, @range is capped.
- *
- * NOTE: Historical use of randomize_range, which this replaces, presumed that
- * @start was already page aligned.  We now align it regardless.
- *
- * Return: A page aligned address within [start, start + range).  On error,
- * @start is returned.
- */
-unsigned long randomize_page(unsigned long start, unsigned long range)
-{
-	if (!PAGE_ALIGNED(start)) {
-		range -= PAGE_ALIGN(start) - start;
-		start = PAGE_ALIGN(start);
-	}
-
-	if (start > ULONG_MAX - range)
-		range = ULONG_MAX - start;
-
-	range >>= PAGE_SHIFT;
-
-	if (range == 0)
-		return start;
-
-	return start + (get_random_long() % range << PAGE_SHIFT);
-}
-- 
2.36.1.74.g277cf0bc36

